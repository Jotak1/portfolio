{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/typing-effect-reactjs/dist/config.js","../node_modules/typing-effect-reactjs/dist/LibTyping.js","../node_modules/typing-effect-reactjs/dist/Typing.js","../node_modules/typing-effect-reactjs/dist/LibTypingStep.js","../node_modules/typing-effect-reactjs/dist/TypingStep.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","self","call","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","result","Super","NewTarget","this","arguments","apply","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","initialConfig","Typing","text","suppressEmptyArray","typeSpeed","ignoreInitialDelay","htmlElement","element","styleClass","letterSpacing","cursorThickness","cursorColor","cursorPadding","shouldDelete","deleteSpeed","blinkingSpeed","disableBlinkingOnEnd","smartBackspace","firstText","Array","isArray","Error","initialState","index","isDeleting","useState","currentText","setCurrentText","isComplete","setIsComplete","timer","useRef","unmountTimer","timeoutInfo","current","undefined","clearTimeout","updateText","useCallback","currentTextContent","currentTextLength","currentIndex","lastMatch","string1","string2","j","charAt","returnLastMatch","setTimeOutSpeed","useEffect","setTimeout","stringToRender","substr","animationStyleConfig","letterSpacingStyleConfig","borderRightStyleConfig","paddingRightStyleConfig","reactElement","createElement","className","React","id","style","animation","borderRight","paddingRight","_extends","assign","source","hasOwnProperty","propTypes","PropTypes","oneOfType","string","arrayOf","isRequired","number","bool","defaultProps","LibTyping","Component","ACTIONS","TypingStep","sequence","content","information","initialText","currentContent","setCurrentContent","CURRENT_COMMAND","getCurrentCommand","currentTimeOutSpeed","config","currentSequenceTypeSpeed","currentSequenceDeleteSpeed","switchCommand","addText","currentCommand","currentLength","currentString","concat","delay","deleteText","Math","abs","console","warn","slice","executeCommand","typeSpeedCurrent","blinkingSpeedCurrent","letterSpacingCurrent","cursorThicknessCurrent","cursorColorCurrent","cursorPaddingCurrent","styleClassCurrent","split","filter","ele","map","array","shape","LibTypingStep"],"mappings":"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","file":"static/js/0.8d1c4427.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","const initialConfig = {\n  typeSpeed: 40,\n  suppressEmptyArray: false,\n  ignoreInitialDelay: true,\n  element: \"h4\",\n  styleClass: \"\",\n  letterSpacing: 0.0,\n  cursorThickness: 0.15,\n  cursorColor: \"black\",\n  cursorPadding: 0.15,\n  shouldDelete: true,\n  deleteSpeed: 30,\n  blinkingSpeed: 530,\n  disableBlinkingOnEnd: 5,\n  smartBackspace: false\n};\nexport { initialConfig };","import React, { useState, useEffect, useRef, useCallback, createElement } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { initialConfig } from \"./config\";\nimport \"./Typing.css\";\n/**\n * @function Typing\n * An UI Component to render typing-effect\n *\n * @param {string || array} text\n *  A string or an array of string to be displayed\n * @param {boolean} suppressEmptyArray\n *  Decides whether to throw an error if empty array is passed\n * @param {number} typeSpeed\n *  Typing speed in milliseconds\n * @param {boolean} ignoreInitialDelay\n *  Whether to start with empty render or first letter already rendered\n * @param {string || React Element} element\n *  HTML Element or an user defined React Component\n * @param {string} styleClass\n *  Optional style class to be passed along with the text\n * @param {number} letterSpacing\n *  Space between each letter\n * @param {number} cursorThickness\n *  Thickness of the cursor\n * @param {string} cursorColor\n *  Color of the cursor\n * @param {number} cursorPadding\n *  Distance between last word and cursor\n * @param {boolean} shouldDelete\n *  Should display delete animation\n * @param {number} deleteSpeed\n *  Delete speed in milliseconds\n * @param {number} blinkingSpeed\n *  Blinking speed of cursor in milliseconds\n * @param {boolean || number} disableBlinkingOnEnd\n *  Disable blinking on end or wait for a few blinks\n * @param {boolean} smartBackspace\n *  Enables smart backspacing\n */\n\nconst Typing = props => {\n  const {\n    text,\n    suppressEmptyArray,\n    typeSpeed,\n    ignoreInitialDelay,\n    element: htmlElement,\n    styleClass,\n    letterSpacing,\n    cursorThickness,\n    cursorColor,\n    cursorPadding,\n    shouldDelete,\n    deleteSpeed,\n    blinkingSpeed,\n    disableBlinkingOnEnd,\n    smartBackspace\n  } = props;\n  let firstText = \"\";\n\n  if (Array.isArray(text)) {\n    // Checks if array of text is passed\n    if (text.length === 0) {\n      // If array is empty either ignore or throw error\n      if (!suppressEmptyArray) {\n        throw new Error(\"Text Array cannot be empty\");\n      } else {\n        if (suppressEmptyArray && ignoreInitialDelay) {\n          // Cannot suppressEmptyArray and ignoreInitialDelay\n          throw new Error(\"suppressEmptyArray and ignoreInitialDelay cannot be both true\");\n        }\n\n        firstText = \"\"; // If suppressEmptyArray is set\n      }\n    } else {\n      firstText = text[0]; // Choose the first text in the array\n    }\n  } else {\n    firstText = text; // If a string is passed\n  }\n  /******************* INITIAL CONFIGURATION *******************/\n\n\n  const initialState = {\n    index: 0,\n    text: firstText,\n    length: ignoreInitialDelay ? 1 : 0,\n    isDeleting: false\n  };\n  const [currentText, setCurrentText] = useState(initialState);\n  const [isComplete, setIsComplete] = useState(false);\n  const timer = useRef(null); // Unmounts the timer on component unmount\n\n  const unmountTimer = () => {\n    const timeoutInfo = timer.current;\n\n    if (timeoutInfo) {\n      // Checks if timer has been already been stopped\n      timer.current = undefined;\n      clearTimeout(timeoutInfo);\n    }\n  };\n\n  const returnLastMatch = (string1, string2) => {\n    let i = 0;\n    let j = 0;\n\n    for (; i < string1.length && j < string2.length; i++, j++) {\n      if (string1.charAt(i) !== string2.charAt(j)) return i - 1;\n    }\n\n    return i;\n  }; // React Callback function used to update the rendered text\n\n\n  const updateText = useCallback(() => {\n    const currentTextContent = currentText.text;\n    const currentTextLength = currentText.length;\n    const currentIndex = currentText.index;\n\n    if (currentTextContent.length === currentTextLength) {\n      // Check if end of text has been reached\n      if (Array.isArray(text)) {\n        // If array go for the next text\n        if (currentIndex >= text.length - 1) {\n          // If it was the last text in the array\n          setIsComplete(true);\n          unmountTimer();\n          return false;\n        } else {\n          if (shouldDelete) {\n            // If shouldDelete is true, start deleting characters\n            setCurrentText({ ...currentText,\n              length: currentTextLength - 1,\n              isDeleting: true\n            }); // Start decrementing the length\n          } else {\n            setCurrentText({\n              index: currentIndex + 1,\n              text: text[currentIndex + 1],\n              length: ignoreInitialDelay ? 1 : 0,\n              isDeleting: false\n            });\n          }\n\n          return true;\n        }\n      } else {\n        // If for a string, the entire text is covered unmount timer\n        setIsComplete(true);\n        unmountTimer();\n        return false;\n      }\n    }\n\n    if (currentTextLength === 0 && currentText.isDeleting) {\n      // Entire text has been deleted then switch to the next text\n      setCurrentText({\n        index: currentIndex + 1,\n        text: text[currentIndex + 1],\n        length: ignoreInitialDelay ? 1 : 0,\n        isDeleting: false\n      });\n      return true;\n    }\n\n    if (currentText.isDeleting && smartBackspace && currentIndex < text.length - 1) {\n      // Smart Backspace enabled and not the last texty\n      const lastMatch = returnLastMatch(currentTextContent, text[currentIndex + 1]);\n\n      if (currentTextLength === lastMatch) {\n        setCurrentText({\n          index: currentIndex + 1,\n          text: text[currentIndex + 1],\n          length: lastMatch + 1,\n          isDeleting: false\n        });\n        return true;\n      }\n    }\n\n    if (currentText.isDeleting) {\n      setCurrentText({ ...currentText,\n        length: currentTextLength - 1\n      }); // Decrement the length in other case\n    } else {\n      setCurrentText({ ...currentText,\n        length: currentTextLength + 1\n      }); // Increment the length in other case\n    }\n\n    return true;\n  }, [currentText, text, shouldDelete, ignoreInitialDelay, smartBackspace]); // Decide whether to set delete speed or type speed\n\n  const setTimeOutSpeed = currentText.isDeleting ? deleteSpeed : typeSpeed;\n  useEffect(() => {\n    timer.current = setTimeout(updateText, setTimeOutSpeed);\n    return unmountTimer;\n  }, [updateText, setTimeOutSpeed]);\n  const stringToRender = currentText.text.substr(0, currentText.length); // Slice a portion of the string\n\n  /******************* STYLE CONFIGURATION *******************/\n\n  let animationStyleConfig = \"\";\n\n  if (isComplete) {\n    if (typeof disableBlinkingOnEnd === \"boolean\") {\n      // Check if a boolean value is passed\n      if (disableBlinkingOnEnd) {\n        // Disable blinking right away\n        animationStyleConfig = `typing ${typeSpeed / 1000}s steps(20, end), stop-blink ${blinkingSpeed / 1000}s steps(1) infinite`;\n      } else {\n        // Do not disable blinking\n        animationStyleConfig = `typing ${typeSpeed / 1000}s steps(20, end), blink ${blinkingSpeed / 1000}s steps(1) infinite`;\n      }\n    } else {\n      // Blink for some time and then stop\n      animationStyleConfig = `blink ${blinkingSpeed / 1000}s steps(1) infinite, stop-blink ${blinkingSpeed / 1000}s ${disableBlinkingOnEnd * blinkingSpeed / 1000}s steps(1) infinite\n      `;\n    }\n  } else {\n    // Animation is ongoing. Continue blinking\n    animationStyleConfig = `typing ${typeSpeed / 1000}s steps(20, end), blink ${blinkingSpeed / 1000}s steps(1) infinite`;\n  }\n\n  const letterSpacingStyleConfig = `${letterSpacing}em`;\n  const borderRightStyleConfig = `${cursorThickness}em solid ${cursorColor}`;\n  const paddingRightStyleConfig = `${cursorPadding}em`; // Create a React element based on the html element or React Component supplied by the user\n\n  const reactElement = /*#__PURE__*/createElement(htmlElement, {\n    className: `${styleClass}`\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"typing-effect__sid200026__text\" // Should always be unique\n    ,\n    style: {\n      animation: animationStyleConfig,\n      letterSpacing: letterSpacingStyleConfig,\n      borderRight: borderRightStyleConfig,\n      paddingRight: paddingRightStyleConfig\n    }\n  }, stringToRender));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"typing-effect__typewriter\"\n  }, reactElement);\n};\n/******************* PROP VALIDATION *******************/\n\n\nTyping.propTypes = {\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n  typeSpeed: PropTypes.number,\n  suppressEmptyArray: PropTypes.bool,\n  ignoreInitialDelay: PropTypes.bool,\n  element: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  styleClass: PropTypes.string,\n  letterSpacing: PropTypes.number,\n  cursorThickness: PropTypes.number,\n  cursorColor: PropTypes.string,\n  cursorPadding: PropTypes.number,\n  deleteSpeed: PropTypes.number,\n  shouldDelete: PropTypes.bool,\n  blinkingSpeed: PropTypes.number,\n  disableBlinkingOnEnd: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  smartBackspace: PropTypes.bool\n};\nTyping.defaultProps = {\n  typeSpeed: initialConfig.typeSpeed,\n  suppressEmptyArray: initialConfig.suppressEmptyArray,\n  ignoreInitialDelay: initialConfig.ignoreInitialDelay,\n  element: initialConfig.element,\n  styleClass: initialConfig.styleClass,\n  letterSpacing: initialConfig.letterSpacing,\n  cursorThickness: initialConfig.cursorThickness,\n  cursorColor: initialConfig.cursorColor,\n  cursorPadding: initialConfig.cursorPadding,\n  shouldDelete: initialConfig.shouldDelete,\n  deleteSpeed: initialConfig.deleteSpeed,\n  blinkingSpeed: initialConfig.blinkingSpeed,\n  disableBlinkingOnEnd: initialConfig.disableBlinkingOnEnd,\n  smartBackspace: initialConfig.smartBackspace\n};\nexport { Typing };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { initialConfig } from \"./config\";\nimport { Typing as LibTyping } from \"./LibTyping\";\n\nclass Typing extends React.Component {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      text\n    } = this.props;\n    return /*#__PURE__*/React.createElement(LibTyping, _extends({}, this.props, {\n      key: text\n    }));\n  }\n\n}\n\nTyping.propTypes = {\n  text: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]).isRequired,\n  typeSpeed: PropTypes.number,\n  suppressEmptyArray: PropTypes.bool,\n  ignoreInitialDelay: PropTypes.bool,\n  element: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  styleClass: PropTypes.string,\n  letterSpacing: PropTypes.number,\n  cursorThickness: PropTypes.number,\n  cursorColor: PropTypes.string,\n  cursorPadding: PropTypes.number,\n  deleteSpeed: PropTypes.number,\n  shouldDelete: PropTypes.bool,\n  blinkingSpeed: PropTypes.number,\n  disableBlinkingOnEnd: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  smartBackspace: PropTypes.bool\n};\nTyping.defaultProps = {\n  typeSpeed: initialConfig.typeSpeed,\n  suppressEmptyArray: initialConfig.suppressEmptyArray,\n  ignoreInitialDelay: initialConfig.ignoreInitialDelay,\n  element: initialConfig.element,\n  styleClass: initialConfig.styleClass,\n  letterSpacing: initialConfig.letterSpacing,\n  cursorThickness: initialConfig.cursorThickness,\n  cursorColor: initialConfig.cursorColor,\n  cursorPadding: initialConfig.cursorPadding,\n  shouldDelete: initialConfig.shouldDelete,\n  deleteSpeed: initialConfig.deleteSpeed,\n  blinkingSpeed: initialConfig.blinkingSpeed,\n  disableBlinkingOnEnd: initialConfig.disableBlinkingOnEnd,\n  smartBackspace: initialConfig.smartBackspace\n};\nexport { Typing };","import React, { useState, useRef, createElement, useEffect, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { initialConfig } from \"./config\";\nimport \"./TypingStep.css\";\n/**\n * @function TypingStep\n * An UI Component to render fully customisable Typing Effect\n *\n * @param {string || array} sequence\n *  An array of commands to be executed\n *      @param {string || number} content\n *          The command to be executed.\n *          * String denotes add command\n *          * Positive number denotes delay command\n *          * Negative number denotes number of characters to delete\n *      @param {object} config\n *          Set of local configurations that overrides global config\n *             @param {number} typeSpeed\n *             @param {string} styleClass\n *             @param {number} letterSpacing\n *             @param {number} cursorThickness\n *             @param {string} cursorColor\n *             @param {number} cursorPadding\n *             @param {number} deleteSpeed\n *             @param {number} blinkingSpeed\n * @param {number} typeSpeed\n *  Typing speed in milliseconds\n * @param {boolean} ignoreInitialDelay\n *  Whether to start with empty render or first letter already rendered\n * @param {string || React Element} element\n *  HTML Element or an user defined React Component\n * @param {string} styleClass\n *  Optional style class to be passed along with the text\n * @param {number} letterSpacing\n *  Space between each letter\n * @param {number} cursorThickness\n *  Thickness of the cursor\n * @param {string} cursorColor\n *  Color of the cursor\n * @param {number} cursorPadding\n *  Distance between last word and cursors\n * @param {number} deleteSpeed\n *  Delete speed in milliseconds\n * @param {number} blinkingSpeed\n *  Blinking speed of cursor in milliseconds\n * @param {boolean || number} disableBlinkingOnEnd\n *  Disable blinking on end or wait for a few blinks\n */\n// Commands that can be executed\n\nconst ACTIONS = {\n  ADD: \"ADD\",\n  DELETE: \"DELETE\",\n  DELAY: \"DELAY\"\n};\n\nconst TypingStep = props => {\n  const {\n    sequence,\n    typeSpeed,\n    ignoreInitialDelay,\n    element: htmlElement,\n    styleClass,\n    letterSpacing,\n    cursorThickness,\n    cursorColor,\n    cursorPadding,\n    deleteSpeed,\n    blinkingSpeed,\n    disableBlinkingOnEnd\n  } = props; // Cannot pass empty array\n\n  if (sequence.length === 0) {\n    throw new Error(\"Sequence cannot be an empty array\");\n  } // First argument must be a string\n\n\n  if (typeof sequence[0].content !== \"string\") {\n    throw new Error(\"First command must be string\");\n  } // Initial State for sequence configuration\n\n\n  const initialState = {\n    index: 0,\n    information: sequence[0],\n    length: ignoreInitialDelay ? 1 : 0\n  };\n  const initialText = ignoreInitialDelay ? sequence[0].content.charAt(0) : \"\"; // Current text that is to be rendered\n\n  const [currentText, setCurrentText] = useState(initialText); // Current sequence that is being executed\n\n  const [currentContent, setCurrentContent] = useState(initialState); // Whether execution has been completed\n\n  const [isComplete, setIsComplete] = useState(false);\n  const timer = useRef(null); // Unmounts the timer on component unmount\n\n  const unmountTimer = () => {\n    const timeoutInfo = timer.current;\n\n    if (timeoutInfo) {\n      // Checks if timer has been already been stopped\n      timer.current = undefined;\n      clearTimeout(timeoutInfo);\n    }\n  };\n  /******************* Current Command *******************/\n\n\n  const getCurrentCommand = content => {\n    if (typeof content === \"string\") {\n      return ACTIONS.ADD; // String means add command\n    } else {\n      if (content > 0) {\n        return ACTIONS.DELAY; // Positive number means delay\n      } else {\n        return ACTIONS.DELETE; // Negative number means delete\n      }\n    }\n  };\n\n  const {\n    content\n  } = currentContent.information;\n  let CURRENT_COMMAND = getCurrentCommand(content);\n  /******************* Current Speed *******************/\n  // Local value takes precedence over global values\n\n  let currentTimeOutSpeed = undefined;\n\n  switch (CURRENT_COMMAND) {\n    case ACTIONS.ADD:\n      {\n        currentTimeOutSpeed = typeSpeed; // Global value\n\n        if (currentContent.information.hasOwnProperty(\"config\")) {\n          const {\n            config\n          } = currentContent.information;\n\n          if (config.hasOwnProperty(\"typeSpeed\")) {\n            // Check if local value is passed\n            const {\n              typeSpeed: currentSequenceTypeSpeed\n            } = config;\n            currentTimeOutSpeed = currentSequenceTypeSpeed;\n          }\n        }\n\n        break;\n      }\n\n    case ACTIONS.DELAY:\n      {\n        const {\n          information\n        } = currentContent;\n        currentTimeOutSpeed = information.content;\n        break;\n      }\n\n    case ACTIONS.DELETE:\n      {\n        currentTimeOutSpeed = deleteSpeed;\n\n        if (currentContent.information.hasOwnProperty(\"config\")) {\n          const {\n            config\n          } = currentContent.information;\n\n          if (config.hasOwnProperty(\"deleteSpeed\")) {\n            // local value takes precedence\n            const {\n              deleteSpeed: currentSequenceDeleteSpeed\n            } = config;\n            currentTimeOutSpeed = currentSequenceDeleteSpeed;\n          }\n        }\n\n        break;\n      }\n\n    default:\n      {\n        currentTimeOutSpeed = 0; // Should not occur\n      }\n  } // Utility function to change the command\n\n\n  const switchCommand = useCallback(() => {\n    const {\n      index: currentIndex\n    } = currentContent;\n\n    if (currentIndex === sequence.length - 1) {\n      // End of commands\n      unmountTimer();\n      setIsComplete(true);\n    } else {\n      // Goto next command\n      setCurrentContent({\n        index: currentIndex + 1,\n        information: sequence[currentIndex + 1],\n        length: 0 // No need to ignore firstCommandDelay here\n\n      });\n    }\n  }, [currentContent, sequence]); // Function to add text from the current command or switch to the next command\n\n  const addText = useCallback(() => {\n    const {\n      information: currentCommand,\n      length: currentLength\n    } = currentContent;\n\n    if (currentLength === currentCommand.content.length) {\n      // If the current command has finished\n      switchCommand();\n    } else {\n      setCurrentContent({ ...currentContent,\n        length: currentLength + 1\n      });\n      const currentString = currentText.concat(currentCommand.content.charAt(currentLength) // Concat the current letter\n      );\n      setCurrentText(currentString); // Update the current string\n    }\n  }, [currentContent, currentText, switchCommand]); // Function to delay execution of the next command\n\n  const delay = useCallback(() => {\n    switchCommand(); // The delay is already over by the time this function is called\n  }, [switchCommand]); // Function to delete text based on the current command\n\n  const deleteText = useCallback(() => {\n    const {\n      information: currentCommand,\n      length: currentLength\n    } = currentContent;\n\n    if (currentLength === Math.abs(currentCommand.content)) {\n      switchCommand();\n    } else if (currentText.length === 0) {\n      // Trying to delete on an empty string\n\n      /* eslint no-console: [\"error\", { allow: [\"warn\"] }] */\n      console.warn(\"Trying to delete on an empty string\");\n      switchCommand();\n    } else {\n      setCurrentContent({ ...currentContent,\n        length: currentLength + 1\n      });\n      const currentString = currentText.slice(0, currentText.length - 1); // Remove the last character\n\n      setCurrentText(currentString);\n    }\n  }, [currentContent, currentText, switchCommand]); // Decides how to execute the current command\n\n  const executeCommand = useCallback(() => {\n    switch (CURRENT_COMMAND) {\n      case ACTIONS.ADD:\n        {\n          addText();\n          break;\n        }\n\n      case ACTIONS.DELAY:\n        {\n          delay();\n          break;\n        }\n\n      case ACTIONS.DELETE:\n        {\n          deleteText();\n          break;\n        }\n\n      default:\n        {\n          /* eslint no-console: [\"error\", { allow: [\"warn\"] }] */\n          console.warn(\"Command not defined\"); // Erroneous condition that shouldn't occur\n        }\n    }\n  }, [addText, deleteText, delay, CURRENT_COMMAND]); // Execute the command based on the timeout speed\n\n  useEffect(() => {\n    timer.current = setTimeout(executeCommand, currentTimeOutSpeed);\n    return unmountTimer;\n  }, [currentTimeOutSpeed, executeCommand]);\n  const stringToRender = currentText;\n  /******************* LOCAL CONFIGURATION *******************/\n\n  let typeSpeedCurrent = typeSpeed;\n  let blinkingSpeedCurrent = blinkingSpeed;\n  let letterSpacingCurrent = letterSpacing;\n  let cursorThicknessCurrent = cursorThickness;\n  let cursorColorCurrent = cursorColor;\n  let cursorPaddingCurrent = cursorPadding;\n  let styleClassCurrent = styleClass; // Override global configuration if provided\n\n  if (currentContent.information.hasOwnProperty(\"config\")) {\n    const {\n      config\n    } = currentContent.information;\n\n    if (config.hasOwnProperty(\"typeSpeed\")) {\n      typeSpeedCurrent = config.typeSpeed;\n    }\n\n    if (config.hasOwnProperty(\"blinkingSpeed\")) {\n      blinkingSpeedCurrent = config.blinkingSpeed;\n    }\n\n    if (config.hasOwnProperty(\"letterSpacing\")) {\n      letterSpacingCurrent = config.letterSpacing;\n    }\n\n    if (config.hasOwnProperty(\"cursorThickness\")) {\n      cursorThicknessCurrent = config.cursorThickness;\n    }\n\n    if (config.hasOwnProperty(\"cursorColor\")) {\n      cursorColorCurrent = config.cursorColor;\n    }\n\n    if (config.hasOwnProperty(\"cursorPadding\")) {\n      cursorPaddingCurrent = config.cursorPadding;\n    }\n\n    if (config.hasOwnProperty(\"styleClass\")) {\n      styleClassCurrent = config.styleClass;\n    }\n  }\n  /******************* STYLE CONFIGURATION *******************/\n\n\n  let animationStyleConfig = \"\";\n\n  if (isComplete) {\n    // Set to global properties on completion\n    typeSpeedCurrent = typeSpeed;\n    blinkingSpeedCurrent = blinkingSpeed;\n    letterSpacingCurrent = letterSpacing;\n    cursorThicknessCurrent = cursorThickness;\n    cursorColorCurrent = cursorColor;\n    cursorPaddingCurrent = cursorPadding;\n    styleClassCurrent = styleClass;\n\n    if (typeof disableBlinkingOnEnd === \"boolean\") {\n      // Check if a boolean value is passed\n      if (disableBlinkingOnEnd) {\n        // Disable blinking right away\n        animationStyleConfig = `typing ${typeSpeedCurrent / 1000}s steps(20, end), stop-blink ${blinkingSpeedCurrent / 1000}s steps(1) infinite`;\n      } else {\n        // Do not disable blinking\n        animationStyleConfig = `typing ${typeSpeedCurrent / 1000}s steps(20, end), blink ${blinkingSpeedCurrent / 1000}s steps(1) infinite`;\n      }\n    } else {\n      // Blink for some time and then stop\n      animationStyleConfig = `blink ${blinkingSpeedCurrent / 1000}s steps(1) infinite, stop-blink ${blinkingSpeedCurrent / 1000}s ${disableBlinkingOnEnd * blinkingSpeedCurrent / 1000}s steps(1) infinite\n      `;\n    }\n  } else {\n    // Animation is ongoing. Continue blinking\n    animationStyleConfig = `typing ${typeSpeedCurrent / 1000}s steps(20, end), blink ${blinkingSpeedCurrent / 1000}s steps(1) infinite`;\n  }\n\n  const letterSpacingStyleConfig = `${letterSpacingCurrent}em`;\n  const borderRightStyleConfig = `${cursorThicknessCurrent}em solid ${cursorColorCurrent}`;\n  const paddingRightStyleConfig = `${cursorPaddingCurrent}em`; // Create a React element based on the html element or React Component supplied by the user\n\n  const typeWriterText = () => {\n    return stringToRender.split(\"\\n\").filter(ele => ele.length !== 0).map((ele, index, array) => {\n      const returnBorderProperty = () => {\n        if (index + 1 === array.length) {\n          return borderRightStyleConfig;\n        } else {\n          return \"transparent\";\n        }\n      };\n\n      const reactElement = /*#__PURE__*/createElement(htmlElement, {\n        className: `${styleClassCurrent}`,\n        key: `${index}`\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        id: \"typing-effect__sid200026__text__step\" // Should always be unique\n        ,\n        style: {\n          animation: animationStyleConfig,\n          letterSpacing: letterSpacingStyleConfig,\n          borderRight: returnBorderProperty(),\n          paddingRight: paddingRightStyleConfig\n        }\n      }, ele));\n      return reactElement;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \".typing-effect__typewriter__typing_step\"\n  }, typeWriterText());\n};\n/******************* PROP VALIDATION *******************/\n\n\nTypingStep.propTypes = {\n  sequence: PropTypes.arrayOf(PropTypes.shape({\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    config: PropTypes.shape({\n      typeSpeed: PropTypes.number,\n      styleClass: PropTypes.string,\n      letterSpacing: PropTypes.number,\n      cursorThickness: PropTypes.number,\n      cursorColor: PropTypes.string,\n      cursorPadding: PropTypes.number,\n      deleteSpeed: PropTypes.number,\n      blinkingSpeed: PropTypes.number\n    })\n  })).isRequired,\n  ignoreInitialDelay: PropTypes.bool,\n  disableBlinkingOnEnd: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  typeSpeed: PropTypes.number,\n  element: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  styleClass: PropTypes.string,\n  letterSpacing: PropTypes.number,\n  cursorThickness: PropTypes.number,\n  cursorColor: PropTypes.string,\n  cursorPadding: PropTypes.number,\n  deleteSpeed: PropTypes.number,\n  blinkingSpeed: PropTypes.number\n};\nTypingStep.defaultProps = {\n  typeSpeed: initialConfig.typeSpeed,\n  ignoreInitialDelay: initialConfig.ignoreInitialDelay,\n  element: initialConfig.element,\n  styleClass: initialConfig.styleClass,\n  letterSpacing: initialConfig.letterSpacing,\n  cursorThickness: initialConfig.cursorThickness,\n  cursorColor: initialConfig.cursorColor,\n  cursorPadding: initialConfig.cursorPadding,\n  deleteSpeed: initialConfig.deleteSpeed,\n  blinkingSpeed: initialConfig.blinkingSpeed,\n  disableBlinkingOnEnd: initialConfig.disableBlinkingOnEnd\n};\nexport { TypingStep };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { initialConfig } from \"./config\";\nimport { TypingStep as LibTypingStep } from \"./LibTypingStep\";\n/**\n * @class TypingStep\n * An UI Component to render fully customisable Typing Effect\n *\n * @param {string || array} sequence\n *  An array of commands to be executed\n *      @param {string || number} content\n *          The command to be executed.\n *          * String denotes add command\n *          * Positive number denotes delay command\n *          * Negative number denotes number of characters to delete\n *      @param {object} config\n *          Set of local configurations that overrides global config\n *             @param {number} typeSpeed\n *             @param {string} styleClass\n *             @param {number} letterSpacing\n *             @param {number} cursorThickness\n *             @param {string} cursorColor\n *             @param {number} cursorPadding\n *             @param {number} deleteSpeed\n *             @param {number} blinkingSpeed\n * @param {number} typeSpeed\n *  Typing speed in milliseconds\n * @param {boolean} ignoreInitialDelay\n *  Whether to start with empty render or first letter already rendered\n * @param {string || React Element} element\n *  HTML Element or an user defined React Component\n * @param {string} styleClass\n *  Optional style class to be passed along with the text\n * @param {number} letterSpacing\n *  Space between each letter\n * @param {number} cursorThickness\n *  Thickness of the cursor\n * @param {string} cursorColor\n *  Color of the cursor\n * @param {number} cursorPadding\n *  Distance between last word and cursors\n * @param {number} deleteSpeed\n *  Delete speed in milliseconds\n * @param {number} blinkingSpeed\n *  Blinking speed of cursor in milliseconds\n * @param {boolean || number} disableBlinkingOnEnd\n *  Disable blinking on end or wait for a few blinks\n */\n\nclass TypingStep extends React.Component {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      sequence\n    } = this.props;\n    return /*#__PURE__*/React.createElement(LibTypingStep, _extends({}, this.props, {\n      key: sequence\n    }));\n  }\n\n}\n\nTypingStep.propTypes = {\n  sequence: PropTypes.arrayOf(PropTypes.shape({\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    config: PropTypes.shape({\n      typeSpeed: PropTypes.number,\n      styleClass: PropTypes.string,\n      letterSpacing: PropTypes.number,\n      cursorThickness: PropTypes.number,\n      cursorColor: PropTypes.string,\n      cursorPadding: PropTypes.number,\n      deleteSpeed: PropTypes.number,\n      blinkingSpeed: PropTypes.number\n    })\n  })).isRequired,\n  ignoreInitialDelay: PropTypes.bool,\n  disableBlinkingOnEnd: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  typeSpeed: PropTypes.number,\n  element: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  styleClass: PropTypes.string,\n  letterSpacing: PropTypes.number,\n  cursorThickness: PropTypes.number,\n  cursorColor: PropTypes.string,\n  cursorPadding: PropTypes.number,\n  deleteSpeed: PropTypes.number,\n  blinkingSpeed: PropTypes.number\n};\nTypingStep.defaultProps = {\n  typeSpeed: initialConfig.typeSpeed,\n  ignoreInitialDelay: initialConfig.ignoreInitialDelay,\n  element: initialConfig.element,\n  styleClass: initialConfig.styleClass,\n  letterSpacing: initialConfig.letterSpacing,\n  cursorThickness: initialConfig.cursorThickness,\n  cursorColor: initialConfig.cursorColor,\n  cursorPadding: initialConfig.cursorPadding,\n  deleteSpeed: initialConfig.deleteSpeed,\n  blinkingSpeed: initialConfig.blinkingSpeed,\n  disableBlinkingOnEnd: initialConfig.disableBlinkingOnEnd\n};\nexport { TypingStep };"],"sourceRoot":""}